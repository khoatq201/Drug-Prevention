import React, { useEffect } from "react";
import { Link } from "react-router-dom";
import { motion } from "framer-motion";
import { useAuth } from "../contexts/AuthContext";
import toast from "react-hot-toast";
import {
  AcademicCapIcon,
  ClipboardDocumentCheckIcon,
  CalendarDaysIcon,
  UsersIcon,
  ShieldCheckIcon,
  HeartIcon,
} from "@heroicons/react/24/outline";

const Home = () => {
  const { isAuthenticated, user } = useAuth();

  // Debug auth state
  console.log(
    "üè† Home component render - isAuthenticated:",
    isAuthenticated,
    "user:",
    user
  );

  // Show welcome toast when user is authenticated
  useEffect(() => {
    if (isAuthenticated && user) {
      // Check if we just came from login (to avoid showing toast on every page reload)
      const justLoggedIn = sessionStorage.getItem("justLoggedIn");
      if (justLoggedIn) {
        toast.success(`Ch√†o m·ª´ng tr·ªü l·∫°i, ${user.firstName}! üéâ`, {
          duration: 4000,
          position: "top-center",
          style: {
            background: "#10B981",
            color: "white",
            padding: "16px 24px",
            borderRadius: "8px",
            fontSize: "16px",
            fontWeight: "500",
          },
          icon: "üëã",
        });
        // Remove the flag after showing toast
        sessionStorage.removeItem("justLoggedIn");
      }
    }
  }, [isAuthenticated, user]);

  // Animation variants
  const fadeInUp = {
    hidden: { opacity: 0, y: 60 },
    visible: { opacity: 1, y: 0, transition: { duration: 0.6 } },
  };

  const staggerContainer = {
    hidden: { opacity: 0 },
    visible: {
      opacity: 1,
      transition: {
        staggerChildren: 0.2,
      },
    },
  };

  const slideInLeft = {
    hidden: { opacity: 0, x: -60 },
    visible: { opacity: 1, x: 0, transition: { duration: 0.8 } },
  };

  const slideInRight = {
    hidden: { opacity: 0, x: 60 },
    visible: { opacity: 1, x: 0, transition: { duration: 0.8 } },
  };

  const features = [
    {
      icon: AcademicCapIcon,
      title: "Kh√≥a h·ªçc ƒë√†o t·∫°o",
      description:
        "C√°c kh√≥a h·ªçc online v·ªÅ nh·∫≠n th·ª©c ma t√∫y, k·ªπ nƒÉng ph√≤ng tr√°nh v√† t·ª´ ch·ªëi, ph√¢n theo ƒë·ªô tu·ªïi ph√π h·ª£p.",
      link: "/courses",
      color: "bg-green-500",
    },
    {
      icon: ClipboardDocumentCheckIcon,
      title: "ƒê√°nh gi√° r·ªßi ro",
      description:
        "Th·ª±c hi·ªán c√°c b√†i kh·∫£o s√°t ASSIST, CRAFFT ƒë·ªÉ x√°c ƒë·ªãnh m·ª©c ƒë·ªô nguy c∆° v√† nh·∫≠n khuy·∫øn ngh·ªã ph√π h·ª£p.",
      link: "/assessments",
      color: "bg-emerald-500",
    },
    {
      icon: CalendarDaysIcon,
      title: "ƒê·∫∑t l·ªãch t∆∞ v·∫•n",
      description:
        "ƒê·∫∑t l·ªãch h·∫πn tr·ª±c tuy·∫øn v·ªõi chuy√™n vi√™n t∆∞ v·∫•n ƒë·ªÉ ƒë∆∞·ª£c h·ªó tr·ª£ chuy√™n nghi·ªáp.",
      link: "/appointments",
      color: "bg-teal-500",
    },
    {
      icon: UsersIcon,
      title: "Ch∆∞∆°ng tr√¨nh c·ªông ƒë·ªìng",
      description:
        "Tham gia c√°c ch∆∞∆°ng tr√¨nh truy·ªÅn th√¥ng v√† gi√°o d·ª•c c·ªông ƒë·ªìng v·ªÅ ph√≤ng ch·ªëng ma t√∫y.",
      link: "/programs",
      color: "bg-lime-500",
    },
  ];

  const stats = [
    { label: "H·ªçc vi√™n ƒë√£ tham gia", value: "2,500+" },
    { label: "Kh√≥a h·ªçc c√≥ s·∫µn", value: "45+" },
    { label: "Chuy√™n vi√™n t∆∞ v·∫•n", value: "20+" },
    { label: "ƒê√°nh gi√° r·ªßi ro ho√†n th√†nh", value: "1,200+" },
  ];

  const testimonials = [
    {
      name: "Nguy·ªÖn Th·ªã Mai",
      role: "Ph·ª• huynh",
      content:
        "Ch∆∞∆°ng tr√¨nh ƒë√£ gi√∫p t√¥i hi·ªÉu r√µ h∆°n v·ªÅ c√°ch gi√°o d·ª•c con em v·ªÅ t√°c h·∫°i c·ªßa ma t√∫y v√† c√°ch ph√≤ng tr√°nh hi·ªáu qu·∫£.",
      avatar: "/api/placeholder/50/50",
    },
    {
      name: "Tr·∫ßn VƒÉn Nam",
      role: "Gi√°o vi√™n",
      content:
        "C√°c kh√≥a h·ªçc r·∫•t h·ªØu √≠ch cho c√¥ng vi·ªác gi·∫£ng d·∫°y c·ªßa t√¥i. N·ªôi dung ƒë∆∞·ª£c thi·∫øt k·∫ø khoa h·ªçc v√† d·ªÖ hi·ªÉu.",
      avatar: "/api/placeholder/50/50",
    },
    {
      name: "L√™ Th·ªã Hoa",
      role: "Sinh vi√™n",
      content:
        "B√†i ƒë√°nh gi√° r·ªßi ro gi√∫p t√¥i nh·∫≠n th·ª©c ƒë∆∞·ª£c nh·ªØng nguy c∆° ti·ªÅm ·∫©n v√† bi·∫øt c√°ch b·∫£o v·ªá b·∫£n th√¢n.",
      avatar: "/api/placeholder/50/50",
    },
  ];

  return (
    <motion.div className="min-h-screen" initial="hidden" animate="visible">
      {/* Hero Section */}
      <section className="bg-gradient-to-r from-green-600 via-green-700 to-green-800 text-white overflow-hidden">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-20">
          <motion.div className="text-center" variants={fadeInUp}>
            <motion.h1
              className="text-4xl md:text-6xl font-bold mb-6"
              variants={slideInLeft}
            >
              C√πng nhau ph√≤ng ch·ªëng
              <motion.span
                className="block text-green-200"
                variants={slideInRight}
              >
                Ma t√∫y trong c·ªông ƒë·ªìng
              </motion.span>
            </motion.h1>
            <motion.p
              className="text-xl md:text-2xl text-primary-100 mb-8 max-w-3xl mx-auto"
              variants={fadeInUp}
            >
              N·ªÅn t·∫£ng gi√°o d·ª•c v√† h·ªó tr·ª£ to√†n di·ªán gi√∫p n√¢ng cao nh·∫≠n th·ª©c,
              ƒë√°nh gi√° r·ªßi ro v√† cung c·∫•p t∆∞ v·∫•n chuy√™n nghi·ªáp v·ªÅ ph√≤ng ch·ªëng ma
              t√∫y.
            </motion.p>
            <motion.div
              className="flex flex-col sm:flex-row gap-4 justify-center"
              variants={staggerContainer}
            >
              <motion.div variants={fadeInUp}>
                <Link
                  to="/courses"
                  className="bg-white text-green-600 px-8 py-3.5 rounded-lg font-semibold hover:bg-gray-100 transition duration-200 inline-block"
                >
                  Kh√°m ph√° kh√≥a h·ªçc
                </Link>
              </motion.div>
              <motion.div variants={fadeInUp}>
                <Link
                  to="/assessments"
                  className="border-2 border-white text-white px-8 py-3 rounded-lg font-semibold hover:bg-white hover:text-green-600 transition duration-200 inline-block"
                >
                  ƒê√°nh gi√° r·ªßi ro
                </Link>
              </motion.div>
            </motion.div>
          </motion.div>
        </div>
      </section>

      {/* Features Section */}
      <motion.section
        className="py-20 bg-white"
        initial="hidden"
        whileInView="visible"
        viewport={{ once: true, amount: 0.1 }}
      >
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <motion.div className="text-center mb-16" variants={fadeInUp}>
            <motion.h2
              className="text-3xl md:text-4xl font-bold text-gray-900 mb-4"
              variants={slideInLeft}
            >
              D·ªãch v·ª• c·ªßa ch√∫ng t√¥i
            </motion.h2>
            <motion.p
              className="text-xl text-gray-600 max-w-3xl mx-auto"
              variants={slideInRight}
            >
              Ch√∫ng t√¥i cung c·∫•p c√°c gi·∫£i ph√°p to√†n di·ªán ƒë·ªÉ h·ªó tr·ª£ c·ªông ƒë·ªìng
              trong vi·ªác ph√≤ng ng·ª´a v√† ch·ªëng l·∫°i t·ªá n·∫°n ma t√∫y.
            </motion.p>
          </motion.div>

          <motion.div
            className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-8"
            variants={staggerContainer}
          >
            {features.map((feature, index) => (
              <motion.div
                key={index}
                className="card group hover:shadow-lg transition duration-200 flex flex-col"
                variants={fadeInUp}
                whileHover={{ scale: 1.05, transition: { duration: 0.2 } }}
                whileTap={{ scale: 0.95 }}
              >
                <motion.div
                  className={`w-12 h-12 ${feature.color} rounded-lg flex items-center justify-center mb-4 group-hover:scale-110 transition duration-200`}
                  whileHover={{ rotate: 360, transition: { duration: 0.5 } }}
                >
                  <feature.icon className="w-6 h-6 text-white" />
                </motion.div>
                <h3 className="text-xl font-semibold text-gray-900 mb-3">
                  {feature.title}
                </h3>
                <p className="text-gray-600 mb-4 flex-1 ">
                  {feature.description}
                </p>
                <Link
                  to={feature.link}
                  className="text-green-600 font-medium hover:text-green-700 transition duration-200 mt-auto"
                >
                  T√¨m hi·ªÉu th√™m ‚Üí
                </Link>
              </motion.div>
            ))}
          </motion.div>
        </div>
      </motion.section>

      {/* Stats Section */}
      <motion.section
        className="py-16 bg-gray-50"
        initial="hidden"
        whileInView="visible"
        viewport={{ once: true, amount: 0.3 }}
      >
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <motion.div
            className="grid grid-cols-2 md:grid-cols-4 gap-8"
            variants={staggerContainer}
          >
            {stats.map((stat, index) => (
              <motion.div
                key={index}
                className="text-center"
                variants={fadeInUp}
                whileHover={{ scale: 1.1, transition: { duration: 0.2 } }}
              >
                <motion.div
                  className="text-3xl md:text-4xl font-bold text-green-600 mb-2"
                  initial={{ scale: 0 }}
                  whileInView={{ scale: 1 }}
                  transition={{ duration: 0.5, delay: index * 0.1 }}
                  viewport={{ once: true }}
                >
                  {stat.value}
                </motion.div>
                <div className="text-gray-600">{stat.label}</div>
              </motion.div>
            ))}
          </motion.div>
        </div>
      </motion.section>

      {/* About Section */}
      <motion.section
        className="py-20 bg-white"
        initial="hidden"
        whileInView="visible"
        viewport={{ once: true, amount: 0.1 }}
      >
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="grid grid-cols-1 lg:grid-cols-2 gap-12 items-center">
            <motion.div variants={slideInLeft}>
              <motion.h2
                className="text-3xl md:text-4xl font-bold text-gray-900 mb-6"
                variants={fadeInUp}
              >
                V·ªÅ t·ªï ch·ª©c c·ªßa ch√∫ng t√¥i
              </motion.h2>
              <motion.p
                className="text-lg text-gray-600 mb-6"
                variants={fadeInUp}
              >
                Ch√∫ng t√¥i l√† m·ªôt t·ªï ch·ª©c t√¨nh nguy·ªán phi l·ª£i nhu·∫≠n, ho·∫°t ƒë·ªông
                v·ªõi s·ª© m·ªánh ph√≤ng ng·ª´a v√† gi·∫£m thi·ªÉu t√°c h·∫°i c·ªßa ma t√∫y trong
                c·ªông ƒë·ªìng th√¥ng qua gi√°o d·ª•c, ƒë√°nh gi√° v√† t∆∞ v·∫•n chuy√™n nghi·ªáp.
              </motion.p>
              <motion.div
                className="grid grid-cols-1 sm:grid-cols-2 gap-4 mb-8"
                variants={staggerContainer}
              >
                <motion.div className="flex items-center" variants={fadeInUp}>
                  <ShieldCheckIcon className="w-6 h-6 text-green-600 mr-3" />
                  <span className="text-gray-700">Chuy√™n nghi·ªáp</span>
                </motion.div>
                <motion.div className="flex items-center" variants={fadeInUp}>
                  <HeartIcon className="w-6 h-6 text-green-600 mr-3" />
                  <span className="text-gray-700">T·∫≠n t√¢m</span>
                </motion.div>
                <motion.div className="flex items-center" variants={fadeInUp}>
                  <UsersIcon className="w-6 h-6 text-green-600 mr-3" />
                  <span className="text-gray-700">C·ªông ƒë·ªìng</span>
                </motion.div>
                <motion.div className="flex items-center" variants={fadeInUp}>
                  <AcademicCapIcon className="w-6 h-6 text-green-600 mr-3" />
                  <span className="text-gray-700">Gi√°o d·ª•c</span>
                </motion.div>
              </motion.div>
              <motion.div variants={fadeInUp}>
                <Link to="/about" className="btn-primary inline-block">
                  T√¨m hi·ªÉu th√™m
                </Link>
              </motion.div>
            </motion.div>
            <motion.div className="relative" variants={slideInRight}>
              <motion.div
                className="aspect-w-4 aspect-h-3 rounded-lg overflow-hidden bg-gray-200 relative transform scale-80"
                whileHover={{ scale: 1.02 }}
                transition={{ duration: 0.3 }}
              >
                <img
                  src="/images/ChatGPT Image 15_49_02 8 thg 7, 2025.png"
                  alt="T·ªï ch·ª©c ph√≤ng ch·ªëng ma t√∫y"
                  className="object-cover w-full h-full"
                />
                {/* Gradient overlay ƒë·ªÉ l√†m m·ªù vi·ªÅn */}
                <div className="absolute inset-0 bg-gradient-to-r from-white/20 via-transparent to-white/20"></div>
                <div className="absolute inset-0 bg-gradient-to-t from-white/20 via-transparent to-white/20"></div>
              </motion.div>
              <motion.div
                className="absolute -bottom-6 -right-6 bg-green-600 text-white p-6 rounded-lg shadow-lg"
                initial={{ scale: 0, rotate: -180 }}
                whileInView={{ scale: 1, rotate: 0 }}
                transition={{ duration: 0.5, delay: 0.3 }}
                viewport={{ once: true }}
                whileHover={{ scale: 1.1, rotate: 5 }}
              >
                <div className="text-2xl font-bold">5+</div>
                <div className="text-sm">NƒÉm ho·∫°t ƒë·ªông</div>
              </motion.div>
            </motion.div>
          </div>
        </div>
      </motion.section>

      {/* Testimonials Section */}
      <motion.section
        className="py-20 bg-gray-50"
        initial="hidden"
        whileInView="visible"
        viewport={{ once: true, amount: 0.1 }}
      >
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <motion.div className="text-center mb-16" variants={fadeInUp}>
            <motion.h2
              className="text-3xl md:text-4xl font-bold text-gray-900 mb-4"
              variants={slideInLeft}
            >
              Ph·∫£n h·ªìi t·ª´ c·ªông ƒë·ªìng
            </motion.h2>
            <motion.p className="text-xl text-gray-600" variants={slideInRight}>
              Nh·ªØng chia s·∫ª t·ª´ nh·ªØng ng∆∞·ªùi ƒë√£ tham gia ch∆∞∆°ng tr√¨nh c·ªßa ch√∫ng
              t√¥i
            </motion.p>
          </motion.div>

          <motion.div
            className="grid grid-cols-1 md:grid-cols-3 gap-8"
            variants={staggerContainer}
          >
            {testimonials.map((testimonial, index) => (
              <motion.div
                key={index}
                className="card"
                variants={fadeInUp}
                whileHover={{
                  scale: 1.05,
                  boxShadow:
                    "0 20px 25px -5px rgb(0 0 0 / 0.1), 0 10px 10px -5px rgb(0 0 0 / 0.04)",
                  transition: { duration: 0.2 },
                }}
              >
                <motion.div
                  className="flex items-center mb-4"
                  initial={{ x: -20, opacity: 0 }}
                  whileInView={{ x: 0, opacity: 1 }}
                  transition={{ duration: 0.5, delay: index * 0.1 }}
                  viewport={{ once: true }}
                >
                  <motion.div
                    className="w-12 h-12 bg-gray-300 rounded-full mr-4"
                    whileHover={{ scale: 1.1, rotate: 360 }}
                    transition={{ duration: 0.3 }}
                  >
                    {/* Placeholder avatar */}
                  </motion.div>
                  <div>
                    <div className="font-semibold text-gray-900">
                      {testimonial.name}
                    </div>
                    <div className="text-sm text-gray-600">
                      {testimonial.role}
                    </div>
                  </div>
                </motion.div>
                <motion.p
                  className="text-gray-600 italic"
                  initial={{ opacity: 0 }}
                  whileInView={{ opacity: 1 }}
                  transition={{ duration: 0.5, delay: index * 0.2 }}
                  viewport={{ once: true }}
                >
                  "{testimonial.content}"
                </motion.p>
              </motion.div>
            ))}
          </motion.div>
        </div>
      </motion.section>

      {/* CTA Section */}
      <motion.section
        className="py-16 bg-green-600"
        initial="hidden"
        whileInView="visible"
        viewport={{ once: true, amount: 0.3 }}
      >
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 text-center">
          <motion.h2
            className="text-3xl md:text-4xl font-bold text-white mb-4"
            variants={fadeInUp}
          >
            B·∫Øt ƒë·∫ßu h√†nh tr√¨nh c·ªßa b·∫°n ngay h√¥m nay
          </motion.h2>
          <motion.p
            className="text-xl text-green-100 mb-8 max-w-2xl mx-auto"
            variants={fadeInUp}
          >
            Tham gia c·ªông ƒë·ªìng c·ªßa ch√∫ng t√¥i ƒë·ªÉ ƒë∆∞·ª£c h·ªó tr·ª£ v√† b·∫£o v·ªá b·∫£n th√¢n
            kh·ªèi t√°c h·∫°i c·ªßa ma t√∫y.
          </motion.p>
          <motion.div
            className="flex flex-col sm:flex-row gap-4 justify-center"
            variants={staggerContainer}
          >
            {isAuthenticated ? (
              // Show for logged in users
              <>
                <motion.div variants={fadeInUp}>
                  <Link
                    to="/dashboard"
                    className="bg-white text-green-600 px-8 py-3 rounded-lg font-semibold hover:bg-gray-100 transition duration-200 inline-block"
                  >
                    ƒêi t·ªõi Dashboard
                  </Link>
                </motion.div>
                <motion.div variants={fadeInUp}>
                  <Link
                    to="/courses"
                    className="border-2 border-white text-white px-8 py-3 rounded-lg font-semibold hover:bg-white hover:text-green-600 transition duration-200 inline-block"
                  >
                    Kh√°m ph√° kh√≥a h·ªçc
                  </Link>
                </motion.div>
              </>
            ) : (
              // Show for guest users
              <>
                <motion.div variants={fadeInUp}>
                  <Link
                    to="/register"
                    className="bg-white text-green-600 px-8 py-3 rounded-lg font-semibold hover:bg-gray-100 transition duration-200 inline-block"
                  >
                    ƒêƒÉng k√Ω ngay
                  </Link>
                </motion.div>
                <motion.div variants={fadeInUp}>
                  <Link
                    to="/contact"
                    className="border-2 border-white text-white px-8 py-3 rounded-lg font-semibold hover:bg-white hover:text-green-600 transition duration-200 inline-block"
                  >
                    Li√™n h·ªá v·ªõi ch√∫ng t√¥i
                  </Link>
                </motion.div>
              </>
            )}
          </motion.div>
        </div>
      </motion.section>
    </motion.div>
  );
};

export default Home;
