const nodemailer = require("nodemailer");

// T·∫°o transporter cho Gmail
const createTransporter = () => {
  return nodemailer.createTransport({
    service: "gmail",
    auth: {
      user: process.env.EMAIL_USER,
      pass: process.env.EMAIL_PASS,
    },
  });
};

// T·∫°o m√£ OTP ng·∫´u nhi√™n 6 ch·ªØ s·ªë
const generateOTP = () => {
  const otp = Math.floor(100000 + Math.random() * 900000).toString();
  console.log("üé≤ Generated OTP:", otp);
  return otp;
};

// G·ª≠i OTP ƒë·ªÉ x√°c th·ª±c ƒëƒÉng k√Ω
const sendRegistrationOTP = async (email, firstName, otp) => {
  console.log("üìß Sending registration OTP email:", { email, firstName, otp });
  const transporter = createTransporter();

  const mailOptions = {
    from: `"${process.env.ORG_NAME}" <${process.env.EMAIL_USER}>`,
    to: email,
    subject: "M√£ x√°c th·ª±c ƒëƒÉng k√Ω t√†i kho·∫£n",
    html: `
      <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;">
        <div style="background: linear-gradient(135deg, #10B981, #059669); padding: 30px; text-align: center;">
          <h1 style="color: white; margin: 0; font-size: 28px;">X√°c th·ª±c t√†i kho·∫£n</h1>
        </div>
        
        <div style="padding: 40px 30px; background-color: #f9fafb;">
          <h2 style="color: #1f2937; margin-bottom: 20px;">Xin ch√†o ${firstName}!</h2>
          
          <p style="color: #4b5563; font-size: 16px; line-height: 1.6;">
            C·∫£m ∆°n b·∫°n ƒë√£ ƒëƒÉng k√Ω t√†i kho·∫£n t·∫°i <strong>${process.env.ORG_NAME}</strong>. 
            ƒê·ªÉ ho√†n t·∫•t qu√° tr√¨nh ƒëƒÉng k√Ω, vui l√≤ng nh·∫≠p m√£ x√°c th·ª±c b√™n d∆∞·ªõi:
          </p>
          
          <div style="text-align: center; margin: 30px 0;">
            <div style="background-color: #10B981; color: white; font-size: 32px; font-weight: bold; 
                        padding: 20px; border-radius: 8px; letter-spacing: 8px; display: inline-block;">
              ${otp}
            </div>
          </div>
          
          <p style="color: #6b7280; font-size: 14px;">
            <strong>L∆∞u √Ω:</strong> M√£ x√°c th·ª±c n√†y c√≥ hi·ªáu l·ª±c trong <strong>10 ph√∫t</strong>. 
            Vui l√≤ng kh√¥ng chia s·∫ª m√£ n√†y v·ªõi b·∫•t k·ª≥ ai.
          </p>
          
          <div style="margin-top: 30px; padding-top: 20px; border-top: 1px solid #e5e7eb;">
            <p style="color: #6b7280; font-size: 12px; margin: 0;">
              N·∫øu b·∫°n kh√¥ng y√™u c·∫ßu ƒëƒÉng k√Ω t√†i kho·∫£n, vui l√≤ng b·ªè qua email n√†y.
            </p>
          </div>
        </div>
        
        <div style="background-color: #1f2937; padding: 20px; text-align: center;">
          <p style="color: #9ca3af; font-size: 14px; margin: 0;">
            ¬© 2025 ${process.env.ORG_NAME}. T·∫•t c·∫£ quy·ªÅn ƒë∆∞·ª£c b·∫£o l∆∞u.
          </p>
        </div>
      </div>
    `,
  };

  try {
    await transporter.sendMail(mailOptions);
    console.log(`‚úÖ Registration OTP sent to ${email}`);
    return true;
  } catch (error) {
    console.error("‚ùå Error sending registration OTP:", error);
    throw new Error("Kh√¥ng th·ªÉ g·ª≠i m√£ x√°c th·ª±c");
  }
};

// G·ª≠i OTP ƒë·ªÉ reset password
const sendPasswordResetOTP = async (email, firstName, otp) => {
  console.log("üìß Sending password reset OTP email:", {
    email,
    firstName,
    otp,
  });
  const transporter = createTransporter();

  const mailOptions = {
    from: `"${process.env.ORG_NAME}" <${process.env.EMAIL_USER}>`,
    to: email,
    subject: "M√£ x√°c th·ª±c ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u",
    html: `
      <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;">
        <div style="background: linear-gradient(135deg, #DC2626, #B91C1C); padding: 30px; text-align: center;">
          <h1 style="color: white; margin: 0; font-size: 28px;">ƒê·∫∑t l·∫°i m·∫≠t kh·∫©u</h1>
        </div>
        
        <div style="padding: 40px 30px; background-color: #f9fafb;">
          <h2 style="color: #1f2937; margin-bottom: 20px;">Xin ch√†o ${firstName}!</h2>
          
          <p style="color: #4b5563; font-size: 16px; line-height: 1.6;">
            Ch√∫ng t√¥i nh·∫≠n ƒë∆∞·ª£c y√™u c·∫ßu ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u cho t√†i kho·∫£n c·ªßa b·∫°n t·∫°i 
            <strong>${process.env.ORG_NAME}</strong>. Vui l√≤ng nh·∫≠p m√£ x√°c th·ª±c b√™n d∆∞·ªõi ƒë·ªÉ ti·∫øp t·ª•c:
          </p>
          
          <div style="text-align: center; margin: 30px 0;">
            <div style="background-color: #DC2626; color: white; font-size: 32px; font-weight: bold; 
                        padding: 20px; border-radius: 8px; letter-spacing: 8px; display: inline-block;">
              ${otp}
            </div>
          </div>
          
          <p style="color: #6b7280; font-size: 14px;">
            <strong>L∆∞u √Ω:</strong> M√£ x√°c th·ª±c n√†y c√≥ hi·ªáu l·ª±c trong <strong>10 ph√∫t</strong>. 
            Vui l√≤ng kh√¥ng chia s·∫ª m√£ n√†y v·ªõi b·∫•t k·ª≥ ai.
          </p>
          
          <div style="margin-top: 30px; padding-top: 20px; border-top: 1px solid #e5e7eb;">
            <p style="color: #6b7280; font-size: 12px; margin: 0;">
              N·∫øu b·∫°n kh√¥ng y√™u c·∫ßu ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u, vui l√≤ng b·ªè qua email n√†y v√† ƒë·∫£m b·∫£o t√†i kho·∫£n c·ªßa b·∫°n an to√†n.
            </p>
          </div>
        </div>
        
        <div style="background-color: #1f2937; padding: 20px; text-align: center;">
          <p style="color: #9ca3af; font-size: 14px; margin: 0;">
            ¬© 2025 ${process.env.ORG_NAME}. T·∫•t c·∫£ quy·ªÅn ƒë∆∞·ª£c b·∫£o l∆∞u.
          </p>
        </div>
      </div>
    `,
  };

  try {
    await transporter.sendMail(mailOptions);
    console.log(`‚úÖ Password reset OTP sent to ${email}`);
    return true;
  } catch (error) {
    console.error("‚ùå Error sending password reset OTP:", error);
    throw new Error("Kh√¥ng th·ªÉ g·ª≠i m√£ x√°c th·ª±c");
  }
};

module.exports = {
  generateOTP,
  sendRegistrationOTP,
  sendPasswordResetOTP,
};
